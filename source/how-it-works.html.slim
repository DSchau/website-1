---
title: Learn how it works - DatoCMS
---

.space--both-5
  .wrap
    .space--bottom-5
      .page-header
        .page-header__title How does it work?
        .page-header__subtitle Learn how DatoCMS enable non-technical editors to update a completely static website

  .wrap--tight: .space--bottom-5.formatted-content.formatted-content--big
    markdown:
      All the websites built with a static site generator (Jekyll, Hugo, etc.) are made of:

      * Static files — usually [Markdown+Frontmatter](https://jekyllrb.com/docs/frontmatter/) or YAML/JSON/Toml config files — which represent **the actual content of the pages**;
      * HTML templates that use these content files to generate **the actual static pages** of the website.

      Up until now, even the most basic change to a static website **could only be performed by tech-savvy users**, as too many things had to be known (Git, Markdown, etc). DatoCMS lets you tackle the problem in a different way:

      1. You create a DatoCMS administrative area that **fits exactly the needs** of your website;
      2. Editors change the contents of the website **inside a nice web interface**, just like they're used to do with ie. Wordpress;
      3. Using our plugins, all the stored data **gets transformed** into local Markdown/config files, so that can be "digested" by the static website generator just as it was written by hand.

      When the editors press the "Publish" button, a new website build gets triggered and updated content is deployed online.

  .space--bottom-5
    .page-header
      .page-header__title Getting started in 5 steps
      .page-header__subtitle Choose your preferred stack and learn how to deploy your first DatoCMS-powered website

  .home-tutorial data-behaviour="configurator": .wrap: .home-tutorial__inner
    .home-tutorial__options
      - data.configurator.variants.each do |variant|
        .home-tutorial__option
          .home-tutorial__option__name= variant.name
          .home-tutorial__option__values
            .home-tutorial__option__values__inner
              - variant.options.each do |option|
                a.home-tutorial__option__value data-behaviour="change-stack" data-key=variant.id data-value=CGI.escapeHTML(option.to_json) class=("is-selected" if data.configurator.start[variant.id] == option.name) class="home-tutorial__option__value--#{variant.id}" href="#"
                  = option.name

    ol.home-tutorial__steps
      li.home-tutorial__step
        .home-tutorial__step__title Host your <span data-role="ssg"></span> website repo on <span data-role="hosting"></span>
        .home-tutorial__step__description Just bootstrap a new <span data-role="ssg"></span> website <a href="#" data-role="ssg" data-key="getting_started_url" data-inject="href">by following the tutorial</a> and push it to a brand new <span data-role="hosting"></span> repository.
      li.home-tutorial__step
        .home-tutorial__step__title Configure <span data-role="cd"></span> for deploy
        .home-tutorial__step__description Follow <a href="#" data-role="cd" data-key="instructions_url" data-inject="href"><span data-role="cd"></span>'s instructions</a> on how to build and deploy your <span data-role="ssg"></span> website. Long story short, you need to select your <span data-role="hosting"></span> project repo and specify the command to execute to build the site (<code><span data-role="ssg" data-key="build_command"></span></code>).
      li.home-tutorial__step
        .home-tutorial__step__title Create a DatoCMS site
        .home-tutorial__step__description Sign up and <a href="http://dashboard.datocms.com/register">create your first site on DatoCMS</a> (it's free!). Configure the appearance of the backend and the kind of content you want to edit using our simple to use web interface. Also, make sure you link DatoCMS to <span data-role="cd"></span> via webhooks.
      li.home-tutorial__step
        .home-tutorial__step__title Use our plugin to integrate DatoCMS with <span data-role="ssg"></span>
        .home-tutorial__step__description <a href="#" data-role="ssg" data-key="integration_url" data-inject="href">Install and configure our <span data-role="ssg"></span> plugin</a> in your project, so that you can easily get the data you need and render it into the website pages.
      li.home-tutorial__step
        .home-tutorial__step__title Hit "Publish" and you're done!
        .home-tutorial__step__description There's no step five actually... you already made it! Just edit some data within your DatoCMS backend, hit "Publish" and watch your website update in a couple of seconds.

    .home-tutorial__videos
      | Still confused? See our <a href="/docs/">documentation</a> for more detailed information!
